/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class NoesisGUI_ {
  public static IntPtr GetType_Bool() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Bool();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Float() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Float();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Int() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Int();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_UInt() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_UInt();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Short() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Short();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_UShort() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_UShort();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_String() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_String();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Color() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Color();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Point() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Point();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Rect() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Rect();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Size() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Size();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Thickness() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Thickness();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_CornerRadius() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_CornerRadius();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Boxed_Bool() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Boxed_Bool();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Boxed_Float() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Boxed_Float();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Boxed_Int() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Boxed_Int();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Boxed_UInt() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Boxed_UInt();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Boxed_Short() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Boxed_Short();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Boxed_UShort() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Boxed_UShort();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Boxed_String() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Boxed_String();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Boxed_Color() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Boxed_Color();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Boxed_Point() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Boxed_Point();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Boxed_Rect() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Boxed_Rect();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Boxed_Size() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Boxed_Size();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Boxed_Thickness() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Boxed_Thickness();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetType_Boxed_CornerRadius() {
    IntPtr ret = NoesisGUI_PINVOKE.GetType_Boxed_CornerRadius();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static bool Unbox_Bool(BaseComponent val) {
    bool ret = NoesisGUI_PINVOKE.Unbox_Bool(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static float Unbox_Float(BaseComponent val) {
    float ret = NoesisGUI_PINVOKE.Unbox_Float(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static int Unbox_Int(BaseComponent val) {
    int ret = NoesisGUI_PINVOKE.Unbox_Int(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static uint Unbox_UInt(BaseComponent val) {
    uint ret = NoesisGUI_PINVOKE.Unbox_UInt(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static short Unbox_Short(BaseComponent val) {
    short ret = NoesisGUI_PINVOKE.Unbox_Short(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static ushort Unbox_UShort(BaseComponent val) {
    ushort ret = NoesisGUI_PINVOKE.Unbox_UShort(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static string Unbox_String(BaseComponent val) {
    string ret = NoesisGUI_PINVOKE.Unbox_String(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Color Unbox_Color(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_Color(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      Color jret = Marshal.PtrToStructure<Color>(ret);
      return jret;
    }
    else {
      return new Color();
    }
  }

  public static Point Unbox_Point(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_Point(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      Point jret = Marshal.PtrToStructure<Point>(ret);
      return jret;
    }
    else {
      return new Point();
    }
  }

  public static Rect Unbox_Rect(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_Rect(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      Rect jret = Marshal.PtrToStructure<Rect>(ret);
      return jret;
    }
    else {
      return new Rect();
    }
  }

  public static Size Unbox_Size(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_Size(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      Size jret = Marshal.PtrToStructure<Size>(ret);
      return jret;
    }
    else {
      return new Size();
    }
  }

  public static Thickness Unbox_Thickness(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_Thickness(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      Thickness jret = Marshal.PtrToStructure<Thickness>(ret);
      return jret;
    }
    else {
      return new Thickness();
    }
  }

  public static CornerRadius Unbox_CornerRadius(BaseComponent val) {
    IntPtr ret = NoesisGUI_PINVOKE.Unbox_CornerRadius(BaseComponent.getCPtr(val));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    if (ret != IntPtr.Zero) {
      CornerRadius jret = Marshal.PtrToStructure<CornerRadius>(ret);
      return jret;
    }
    else {
      return new CornerRadius();
    }
  }

  public static BaseComponent Box_Bool(bool val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Bool(val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Float(float val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Float(val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Int(int val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Int(val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_UInt(uint val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_UInt(val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Short(short val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Short(val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_UShort(ushort val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_UShort(val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_String(string val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_String(val != null ? val : string.Empty);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Color(Color val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Color(val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Point(Point val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Point(val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Rect(Rect val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Rect(val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Size(Size val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Size(val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_Thickness(Thickness val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_Thickness(val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static BaseComponent Box_CornerRadius(CornerRadius val) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Box_CornerRadius(val);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static IntPtr GetRootVisualType() {
    IntPtr ret = NoesisGUI_PINVOKE.GetRootVisualType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

}

}

