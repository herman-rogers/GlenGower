/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class RelativeSource : BaseComponent {

  internal RelativeSource(IntPtr cPtr, bool cMemoryOwn) : base(NoesisGUI_PINVOKE.RelativeSource_SWIGUpcast(cPtr), cMemoryOwn) {
  }

  internal static HandleRef getCPtr(RelativeSource obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public RelativeSource() {
  }

  protected override System.IntPtr CreateCPtr(System.Type type) {
    if (type == typeof(RelativeSource)) {
      return NoesisGUI_PINVOKE.new_RelativeSource__SWIG_0();
    }
    else {
      return base.CreateCPtr(type);
    }
  }

  public RelativeSource(RelativeSourceMode mode) : this(NoesisGUI_PINVOKE.new_RelativeSource__SWIG_1((int)mode), true) {
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public RelativeSource(RelativeSourceMode mode, ResourceKeyType type, int level) : this(NoesisGUI_PINVOKE.new_RelativeSource__SWIG_2((int)mode, ResourceKeyType.getCPtr(type), level), true) {
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public RelativeSource(RelativeSource other) : this(NoesisGUI_PINVOKE.new_RelativeSource__SWIG_3(RelativeSource.getCPtr(other)), true) {
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public static RelativeSource GetPreviousData() {
    IntPtr cPtr = NoesisGUI_PINVOKE.RelativeSource_GetPreviousData();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return Noesis.Extend.GetProxy(cPtr, false) as RelativeSource;
  }

  public static RelativeSource GetSelf() {
    IntPtr cPtr = NoesisGUI_PINVOKE.RelativeSource_GetSelf();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return Noesis.Extend.GetProxy(cPtr, false) as RelativeSource;
  }

  public static RelativeSource GetTemplatedParent() {
    IntPtr cPtr = NoesisGUI_PINVOKE.RelativeSource_GetTemplatedParent();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return Noesis.Extend.GetProxy(cPtr, false) as RelativeSource;
  }

  public RelativeSource PreviousData {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.RelativeSource_PreviousData_get(swigCPtr);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return Noesis.Extend.GetProxy(cPtr, false) as RelativeSource;
    }
  
  }

  public RelativeSource Self {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.RelativeSource_Self_get(swigCPtr);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return Noesis.Extend.GetProxy(cPtr, false) as RelativeSource;
    }
  
  }

  public RelativeSource TemplatedParent {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.RelativeSource_TemplatedParent_get(swigCPtr);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return Noesis.Extend.GetProxy(cPtr, false) as RelativeSource;
    }
  
  }

  public RelativeSourceMode Mode {
    set {
      NoesisGUI_PINVOKE.RelativeSource_Mode_set(swigCPtr, (int)value);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    } 
    get {
      RelativeSourceMode ret = (RelativeSourceMode)NoesisGUI_PINVOKE.RelativeSource_Mode_get(swigCPtr);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  public ResourceKeyType AncestorType {
    set {
      NoesisGUI_PINVOKE.RelativeSource_AncestorType_set(swigCPtr, ResourceKeyType.getCPtr(value));
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.RelativeSource_AncestorType_get(swigCPtr);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return Noesis.Extend.GetProxy(cPtr, false) as ResourceKeyType;
    }
  
  }

  public int AncestorLevel {
    set {
      NoesisGUI_PINVOKE.RelativeSource_AncestorLevel_set(swigCPtr, value);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    } 
    get {
      int ret = NoesisGUI_PINVOKE.RelativeSource_AncestorLevel_get(swigCPtr);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  new internal static IntPtr GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.RelativeSource_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

}

}

