/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class FamilyTypeface : BaseComponent {

  internal FamilyTypeface(IntPtr cPtr, bool cMemoryOwn) : base(NoesisGUI_PINVOKE.FamilyTypeface_SWIGUpcast(cPtr), cMemoryOwn) {
  }

  internal static HandleRef getCPtr(FamilyTypeface obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public FamilyTypeface() {
  }

  protected override System.IntPtr CreateCPtr(System.Type type) {
    if (type == typeof(FamilyTypeface)) {
      return NoesisGUI_PINVOKE.new_FamilyTypeface__SWIG_0();
    }
    else {
      return base.CreateCPtr(type);
    }
  }

  public FontStyle FontStyle {
    get {
      FontStyle ret = (FontStyle)NoesisGUI_PINVOKE.FamilyTypeface_FontStyle_get(swigCPtr);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  public FontWeight FontWeight {
    get {
      FontWeight ret = (FontWeight)NoesisGUI_PINVOKE.FamilyTypeface_FontWeight_get(swigCPtr);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  new internal static IntPtr GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.FamilyTypeface_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

}

}

