/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public partial class PropertyMetadata : BaseComponent {

  internal PropertyMetadata(IntPtr cPtr, bool cMemoryOwn) : base(NoesisGUI_PINVOKE.PropertyMetadata_SWIGUpcast(cPtr), cMemoryOwn) {
  }

  internal static HandleRef getCPtr(PropertyMetadata obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public PropertyMetadata() {
  }

  protected override System.IntPtr CreateCPtr(System.Type type) {
    if (type == typeof(PropertyMetadata)) {
      return NoesisGUI_PINVOKE.new_PropertyMetadata__SWIG_0();
    }
    else {
      return base.CreateCPtr(type);
    }
  }

  public bool HasDefaultValue() {
    bool ret = NoesisGUI_PINVOKE.PropertyMetadata_HasDefaultValue(swigCPtr);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public bool HasCoerceDelegate() {
    bool ret = NoesisGUI_PINVOKE.PropertyMetadata_HasCoerceDelegate(swigCPtr);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public bool HasPropertyChangedDelegate() {
    bool ret = NoesisGUI_PINVOKE.PropertyMetadata_HasPropertyChangedDelegate(swigCPtr);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public bool IsUncached() {
    bool ret = NoesisGUI_PINVOKE.PropertyMetadata_IsUncached(swigCPtr);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public bool Uncached() {
    bool ret = NoesisGUI_PINVOKE.PropertyMetadata_Uncached(swigCPtr);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public void SetAsUncached() {
    NoesisGUI_PINVOKE.PropertyMetadata_SetAsUncached(swigCPtr);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public virtual void ClearInheritedValues() {
    NoesisGUI_PINVOKE.PropertyMetadata_ClearInheritedValues(swigCPtr);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public virtual void Merge(PropertyMetadata ancestor) {
    NoesisGUI_PINVOKE.PropertyMetadata_Merge(swigCPtr, PropertyMetadata.getCPtr(ancestor));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

}

}

