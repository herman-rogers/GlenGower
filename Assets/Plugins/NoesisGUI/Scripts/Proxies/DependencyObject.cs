/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public partial class DependencyObject : BaseComponent {

  internal DependencyObject(IntPtr cPtr, bool cMemoryOwn) : base(NoesisGUI_PINVOKE.DependencyObject_SWIGUpcast(cPtr), cMemoryOwn) {
  }

  internal static HandleRef getCPtr(DependencyObject obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  protected DependencyObject() {
  }

  public byte GetValueProvider(DependencyProperty dp) {
    byte ret = NoesisGUI_PINVOKE.DependencyObject_GetValueProvider(swigCPtr, DependencyProperty.getCPtr(dp));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public void ClearLocalValue(DependencyProperty dp) {
    NoesisGUI_PINVOKE.DependencyObject_ClearLocalValue(swigCPtr, DependencyProperty.getCPtr(dp));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public void InvalidateProperty(DependencyProperty dp, byte priority) {
    NoesisGUI_PINVOKE.DependencyObject_InvalidateProperty__SWIG_0(swigCPtr, DependencyProperty.getCPtr(dp), priority);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public void InvalidateProperty(DependencyProperty dp) {
    NoesisGUI_PINVOKE.DependencyObject_InvalidateProperty__SWIG_1(swigCPtr, DependencyProperty.getCPtr(dp));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public void ClearAnimation(DependencyProperty dp) {
    NoesisGUI_PINVOKE.DependencyObject_ClearAnimation(swigCPtr, DependencyProperty.getCPtr(dp));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public void CoerceValue(DependencyProperty dp) {
    NoesisGUI_PINVOKE.DependencyObject_CoerceValue(swigCPtr, DependencyProperty.getCPtr(dp));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public bool HasAnimatedProperties() {
    bool ret = NoesisGUI_PINVOKE.DependencyObject_HasAnimatedProperties(swigCPtr);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }


  internal static IntPtr Extend(System.Type type) {
    IntPtr unityType = Noesis.Extend.GetPtrForType(type);
    IntPtr nativeType = NoesisGUI_PINVOKE.Extend_DependencyObject(unityType);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return nativeType;
  }
}

}

