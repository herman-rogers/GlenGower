/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class VisualStateManager : DependencyObject {

  internal VisualStateManager(IntPtr cPtr, bool cMemoryOwn) : base(NoesisGUI_PINVOKE.VisualStateManager_SWIGUpcast(cPtr), cMemoryOwn) {
  }

  internal static HandleRef getCPtr(VisualStateManager obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public VisualStateManager() {
  }

  protected override System.IntPtr CreateCPtr(System.Type type) {
    if (type == typeof(VisualStateManager)) {
      return NoesisGUI_PINVOKE.new_VisualStateManager();
    }
    else {
      return base.CreateCPtr(type);
    }
  }

  public static VisualStateManager GetCustomVisualStateManager(DependencyObject obj) {
    IntPtr cPtr = NoesisGUI_PINVOKE.VisualStateManager_GetCustomVisualStateManager(DependencyObject.getCPtr(obj));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return Noesis.Extend.GetProxy(cPtr, false) as VisualStateManager;
  }

  public static void SetCustomVisualStateManager(DependencyObject obj, VisualStateManager value) {
    NoesisGUI_PINVOKE.VisualStateManager_SetCustomVisualStateManager(DependencyObject.getCPtr(obj), VisualStateManager.getCPtr(value));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public static VisualStateGroupCollection GetVisualStateGroups(DependencyObject obj) {
    IntPtr cPtr = NoesisGUI_PINVOKE.VisualStateManager_GetVisualStateGroups(DependencyObject.getCPtr(obj));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return Noesis.Extend.GetProxy(cPtr, false) as VisualStateGroupCollection;
  }

  public static void SetVisualStateGroups(DependencyObject obj, VisualStateGroupCollection groups) {
    NoesisGUI_PINVOKE.VisualStateManager_SetVisualStateGroups(DependencyObject.getCPtr(obj), VisualStateGroupCollection.getCPtr(groups));
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public static bool GoToState(FrameworkElement control, string stateName, bool useTransitions) {
    bool ret = NoesisGUI_PINVOKE.VisualStateManager_GoToState(FrameworkElement.getCPtr(control), stateName != null ? stateName : string.Empty, useTransitions);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static bool GoToElementState(FrameworkElement root, string stateName, bool useTransitions) {
    bool ret = NoesisGUI_PINVOKE.VisualStateManager_GoToElementState(FrameworkElement.getCPtr(root), stateName != null ? stateName : string.Empty, useTransitions);
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static DependencyProperty CustomVisualStateManagerProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.VisualStateManager_CustomVisualStateManagerProperty_get();
      DependencyProperty ret = (cPtr == IntPtr.Zero) ? null : new DependencyProperty(cPtr, false);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  public static DependencyProperty VisualStateGroupsProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.VisualStateManager_VisualStateGroupsProperty_get();
      DependencyProperty ret = (cPtr == IntPtr.Zero) ? null : new DependencyProperty(cPtr, false);
      #if UNITY_EDITOR || NOESIS_API
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  new internal static IntPtr GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.VisualStateManager_GetStaticType();
    #if UNITY_EDITOR || NOESIS_API
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

}

}

